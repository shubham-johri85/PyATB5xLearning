{"name": "Verify click button functionality", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"btn-login\"]\"}\n  (Session info: MicrosoftEdge=131.0.2903.146); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\t(No symbol) [0x00007FF7620B6B05]\n\tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF7623DF444+1437348]\n\tsqlite3_dbdata_init [0x00007FF762482D76+643174]\n\t(No symbol) [0x00007FF761FDC9DB]\n\t(No symbol) [0x00007FF761FDCAE3]\n\t(No symbol) [0x00007FF7620192F7]\n\t(No symbol) [0x00007FF761FFC1DF]\n\t(No symbol) [0x00007FF761FD3437]\n\t(No symbol) [0x00007FF762016BFF]\n\t(No symbol) [0x00007FF761FFBE03]\n\t(No symbol) [0x00007FF761FD2984]\n\t(No symbol) [0x00007FF761FD1E30]\n\t(No symbol) [0x00007FF761FD2571]\n\tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF76238BAD4+1094964]\n\t(No symbol) [0x00007FF7620F32B8]\n\tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF76238AF13+1091955]\n\tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF76238AA79+1090777]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF762190C81+461569]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76218C9A4+444452]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76218CAE9+444777]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF762182166+401382]\n\tBaseThreadInitThunk [0x00007FFBD8CF259D+29]\n\tRtlUserThreadStart [0x00007FFBD960AF38+40]", "trace": "@allure.title(\"Verify click button functionality\")\n    @allure.description(\"click on login button and verify current url\")\n    @pytest.mark.espocrm\n    def test_espocrm_login_click_TC01():\n        chrome_options = Options()\n        chrome_options.add_argument(\"--cognito\")\n        driver = webdriver.Chrome(chrome_options)\n        driver.get(\"https://demo.us.espocrm.com\")\n>       button_element = driver.find_element(By.ID, \"btn-login\")\n\nJan_2025\\ex_16012025_Selenium_Locators\\test07_selenium_locators_Task.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001F82B3156A0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...182166+401382]\\\\n\\\\tBaseThreadInitThunk [0x00007FFBD8CF259D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFBD960AF38+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"btn-login\"]\"}\nE         (Session info: MicrosoftEdge=131.0.2903.146); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \t(No symbol) [0x00007FF7620B6B05]\nE       \tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF7623DF444+1437348]\nE       \tsqlite3_dbdata_init [0x00007FF762482D76+643174]\nE       \t(No symbol) [0x00007FF761FDC9DB]\nE       \t(No symbol) [0x00007FF761FDCAE3]\nE       \t(No symbol) [0x00007FF7620192F7]\nE       \t(No symbol) [0x00007FF761FFC1DF]\nE       \t(No symbol) [0x00007FF761FD3437]\nE       \t(No symbol) [0x00007FF762016BFF]\nE       \t(No symbol) [0x00007FF761FFBE03]\nE       \t(No symbol) [0x00007FF761FD2984]\nE       \t(No symbol) [0x00007FF761FD1E30]\nE       \t(No symbol) [0x00007FF761FD2571]\nE       \tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF76238BAD4+1094964]\nE       \t(No symbol) [0x00007FF7620F32B8]\nE       \tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF76238AF13+1091955]\nE       \tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF76238AA79+1090777]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF762190C81+461569]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76218C9A4+444452]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76218CAE9+444777]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF762182166+401382]\nE       \tBaseThreadInitThunk [0x00007FFBD8CF259D+29]\nE       \tRtlUserThreadStart [0x00007FFBD960AF38+40]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "description": "click on login button and verify current url", "start": 1737106578488, "stop": 1737106598899, "uuid": "e04b15b7-97e6-427d-9b56-07f1346a0b8d", "historyId": "2df4b44d02331cc8da9d9e22941ff925", "testCaseId": "2df4b44d02331cc8da9d9e22941ff925", "fullName": "Jan_2025.ex_16012025_Selenium_Locators.test07_selenium_locators_Task#test_espocrm_login_click_TC01", "labels": [{"name": "tag", "value": "espocrm"}, {"name": "parentSuite", "value": "Jan_2025.ex_16012025_Selenium_Locators"}, {"name": "suite", "value": "test07_selenium_locators_Task"}, {"name": "host", "value": "LAPTOP-E6T2V0BL"}, {"name": "thread", "value": "4632-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Jan_2025.ex_16012025_Selenium_Locators.test07_selenium_locators_Task"}]}